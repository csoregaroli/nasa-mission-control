[{"/Users/personal/Projects/nasa-mission-control/client/src/index.js":"1","/Users/personal/Projects/nasa-mission-control/client/src/App.js":"2","/Users/personal/Projects/nasa-mission-control/client/src/settings.js":"3","/Users/personal/Projects/nasa-mission-control/client/src/pages/AppLayout.js":"4","/Users/personal/Projects/nasa-mission-control/client/src/pages/Launch.js":"5","/Users/personal/Projects/nasa-mission-control/client/src/pages/History.js":"6","/Users/personal/Projects/nasa-mission-control/client/src/pages/Upcoming.js":"7","/Users/personal/Projects/nasa-mission-control/client/src/hooks/usePlanets.js":"8","/Users/personal/Projects/nasa-mission-control/client/src/hooks/useLaunches.js":"9","/Users/personal/Projects/nasa-mission-control/client/src/components/Centered.js":"10","/Users/personal/Projects/nasa-mission-control/client/src/components/Header.js":"11","/Users/personal/Projects/nasa-mission-control/client/src/components/Clickable.js":"12","/Users/personal/Projects/nasa-mission-control/client/src/hooks/requests.js":"13"},{"size":152,"mtime":1673835787852,"results":"14","hashOfConfig":"15"},{"size":673,"mtime":1673835787848,"results":"16","hashOfConfig":"15"},{"size":1185,"mtime":1673835787855,"results":"17","hashOfConfig":"15"},{"size":2815,"mtime":1673836151255,"results":"18","hashOfConfig":"15"},{"size":2016,"mtime":1673835787855,"results":"19","hashOfConfig":"15"},{"size":1455,"mtime":1673835787854,"results":"20","hashOfConfig":"15"},{"size":1891,"mtime":1673835787855,"results":"21","hashOfConfig":"15"},{"size":426,"mtime":1673835787851,"results":"22","hashOfConfig":"15"},{"size":1803,"mtime":1674097894701,"results":"23","hashOfConfig":"15"},{"size":462,"mtime":1673835787849,"results":"24","hashOfConfig":"15"},{"size":2623,"mtime":1673835787850,"results":"25","hashOfConfig":"15"},{"size":384,"mtime":1673835787850,"results":"26","hashOfConfig":"15"},{"size":784,"mtime":1674097792680,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1leyg2e",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"/Users/personal/Projects/nasa-mission-control/client/src/index.js",[],[],"/Users/personal/Projects/nasa-mission-control/client/src/App.js",[],[],"/Users/personal/Projects/nasa-mission-control/client/src/settings.js",[],[],"/Users/personal/Projects/nasa-mission-control/client/src/pages/AppLayout.js",[],[],["70","71"],"/Users/personal/Projects/nasa-mission-control/client/src/pages/Launch.js",[],[],"/Users/personal/Projects/nasa-mission-control/client/src/pages/History.js",[],[],"/Users/personal/Projects/nasa-mission-control/client/src/pages/Upcoming.js",[],[],"/Users/personal/Projects/nasa-mission-control/client/src/hooks/usePlanets.js",[],[],"/Users/personal/Projects/nasa-mission-control/client/src/hooks/useLaunches.js",["72","73"],[],"import { useCallback, useEffect, useState } from 'react'\n\nimport { httpGetLaunches, httpSubmitLaunch, httpAbortLaunch } from './requests'\n\nfunction useLaunches(onSuccessSound, onAbortSound, onFailureSound) {\n  const [launches, saveLaunches] = useState([])\n  const [isPendingLaunch, setPendingLaunch] = useState(false)\n\n  const getLaunches = useCallback(async () => {\n    const fetchedLaunches = await httpGetLaunches()\n    saveLaunches(fetchedLaunches)\n  }, [])\n\n  useEffect(() => {\n    getLaunches()\n  }, [getLaunches])\n\n  const submitLaunch = useCallback(\n    async (e) => {\n      e.preventDefault()\n      // setPendingLaunch(true);\n      const data = new FormData(e.target)\n      const launchDate = new Date(data.get('launch-day'))\n      const mission = data.get('mission-name')\n      const rocket = data.get('rocket-name')\n      const target = data.get('planets-selector')\n      const response = await httpSubmitLaunch({\n        launchDate,\n        mission,\n        rocket,\n        target,\n      })\n\n      // TODO: Set success based on response.\n      const success = false\n      if (success) {\n        getLaunches()\n        setTimeout(() => {\n          setPendingLaunch(false)\n          onSuccessSound()\n        }, 800)\n      } else {\n        onFailureSound()\n      }\n    },\n    [getLaunches, onSuccessSound, onFailureSound]\n  )\n\n  const abortLaunch = useCallback(\n    async (id) => {\n      const response = await httpAbortLaunch(id)\n\n      // TODO: Set success based on response.\n      const success = false\n      if (success) {\n        getLaunches()\n        onAbortSound()\n      } else {\n        onFailureSound()\n      }\n    },\n    [getLaunches, onAbortSound, onFailureSound]\n  )\n\n  return {\n    launches,\n    isPendingLaunch,\n    submitLaunch,\n    abortLaunch,\n  }\n}\n\nexport default useLaunches\n","/Users/personal/Projects/nasa-mission-control/client/src/components/Centered.js",[],[],"/Users/personal/Projects/nasa-mission-control/client/src/components/Header.js",[],[],"/Users/personal/Projects/nasa-mission-control/client/src/components/Clickable.js",[],[],"/Users/personal/Projects/nasa-mission-control/client/src/hooks/requests.js",[],[],["74","75"],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":27,"column":13,"nodeType":"82","messageId":"83","endLine":27,"endColumn":21},{"ruleId":"80","severity":1,"message":"81","line":51,"column":13,"nodeType":"82","messageId":"83","endLine":51,"endColumn":21},{"ruleId":"76","replacedBy":"84"},{"ruleId":"78","replacedBy":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar",["86"],["87"],"no-global-assign","no-unsafe-negation"]